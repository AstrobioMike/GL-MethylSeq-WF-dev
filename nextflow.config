/*
 * ---------------------------------------------------------
 *  Built initially based on the nf-core/methylseq workflow
 * ---------------------------------------------------------
 */

// Parameters to set
params {

    /*
    * ----------------------------------------------------
    *  PARAMETERS THAT SHOULD BE SET/CHECKED FOR EACH USE
    * ----------------------------------------------------
    */

    // gldsAccession = "GLDS-XXX"
    gldsAccession = null
    // runsheet = false
    runsheet = "test-data/test-runsheet.csv"
    // target_organism = false

    // single_end = true
    rrbs = true

    /* **** TrimGalore settings regarding the library preparating method ****
    * SITUATION 1: lib_type = 1
    *     If not RRBS, or if RRBS using Msel digestion, this should be set to: lib_type = 1
    * SITUATION 2: lib_type = 2
    *     If RRBS with Mspl digestion, this should be set to: lib_type = 2
    * SITUATION 3: lib_type = 3
    *     If RRBS with NuGEN ovation kit, this should be set to: lib_type = 3
    */

    lib_type = 3

    /* **** Alignment settings regarding the library preparating method **** */
    non_directional = false

    /* ------------------------------------------ */

    /*
    * ------------------------------------------
    *  PARAMETERS THAT MIGHT WANT TO BE CHANGED
    * ------------------------------------------
    */

    /* **** Thread/cpu settings for parallel options **** */
    general_threads = 2 // this includes settings for: samtools sort, qualimap, trim_galore
    bismark_index_creation_threads = 2 // this one will be doubled, see bismark_genome_preparation docs
    bismark_align_threads = 2 // this one will be doubled for operating on both strands, see bismark docs

    /* **** Memory setting options **** */
    qualimap_java_mem_size = "6G" // see: http://qualimap.conesalab.org/doc_html/faq.html?highlight=java-mem-size

    /* ------------------------------------------ */

    /*
    * -------------------------------------------------
    *  PARAMETERS THAT LIKELY DON'T NEED TO BE CHANGED
    * -------------------------------------------------
    */

    /* **** Output directories **** */
    multiqc_outputs_dir = 'MultiQC_Outputs/'
    filtered_reads_dir = 'Filtered_Sequence_Data/'
    bismark_index_dir = 'Bismark_Index/'
    bismark_alignments_dir = 'Bismark_Alignments/'
    bismark_methylation_calls_dir = 'Bismark_Methylation_Calls/'
    bismark_summary_dir = 'Bismark_Summary/'
    individual_sample_reports = 'Bismark_Summary/Individual_Sample_Reports/'
    project_multiqc_dir = "Project_MultiQC/"
    ref_genome_dir = "Reference_Genome_Files/"
    metadata_dir = "Metadata/"
    methylkit_outputs_dir = "MethylKit_Outputs/"

    /* **** Thread/cpu settings for parallel options **** */
    general_threads = 2 // this includes settings for: samtools sort, qualimap, trim_galore
    bismark_index_creation_threads = 2 // this one will be doubled, see bismark_genome_preparation docs
    bismark_align_threads = 2 // this one will be doubled for operating on both strands, see bismark docs


    /* **** Memory setting options **** */
    qualimap_java_mem_size = "6G" // see: http://qualimap.conesalab.org/doc_html/faq.html?highlight=java-mem-size

    /* ------------------------------------------ */

    /*
    * ----------------------------------------------
    *  PARAMETERS THAT LIKELY SHOULD NOT BE CHANGED
    * ----------------------------------------------
    */

    accepted_lib_types = [1, 2, 3]
    help = false
    reference_table_url = "https://raw.githubusercontent.com/nasa/GeneLab_Data_Processing/master/GeneLab_Reference_Annotations/Pipeline_GL-DPPD-7110_Versions/GL-DPPD-7110/GL-DPPD-7110_annotations.csv"
    accepted_target_orgs = ["ARABIDOPSIS", "FLY", "HUMAN", "MOUSE", "ORYLA", "RAT", "WORM", "YEAST", "ZEBRAFISH"]
    multiqc_config = "${projectDir}/assets/multiqc.config"

    /* **** Dev and Debug parameters **** */
    // Subsamples the raw reads files to the specified number of reads for EACH raw reads file.
    // should be 'false' (without quotes) when not wanted
    truncateTo = false
    // truncateTo = 1000000

    // Indicates if the raw read files should be staged for processing. Disabling is useful for checking the metadata staging without running any actual data processing.
    stageLocal = true

    // Limits the number of samples to process (should be 'false' with no quotes when not wanted)
    limitSamplesTo = false
    // limitSamplesTo = 6

    force_single_end = false

    // Subsample reference fasta to one contig
        // JH584299.1 is a small one for ensembl version 107, Mus_musculus.GRCm39.dna.primary_assembly.fa
        // leave as 'false', with no quotes, when *not* wanting to subsample reference
        // (the header read by samtools is cutoff at first whitespace/non-standard characters)
    // genomeSubsample = false
    genomeSubsample = "JH584299.1"

    // this link works with above mentioned "JH584299.1":
        //    http://ftp.ensembl.org/pub/release-107/fasta/mus_musculus/dna/Mus_musculus.GRCm39.dna.nonchromosomal.fa.gz
        // leave as 'false' if unknown, in which case the full ref will be downloaded and parsed to contig specified above
    // genomeSubsample_download_link = false
    genomeSubsample_download_link = "http://ftp.ensembl.org/pub/release-107/fasta/mus_musculus/dna/Mus_musculus.GRCm39.dna.nonchromosomal.fa.gz"

}

// setting environmental variables
env {

    // setting colors to use
    GREEN = '\033[0;32m'
    YELLOW = '\033[0;33m'
    RED = '\033[0;31m'
    NC = '\033[0m'

    // Export these variables to prevent local Python/R libraries from conflicting with those in the container
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER = "/.Rprofile"
    R_ENVIRON_USER = "/.Renviron"
    
}

/* **** Capture exit codes from upstream processes when piping **** */
process.shell = ['/usr/bin/env bash', '-euo', 'pipefail']

manifest {
    homePage = 'https://github.com/AstrobioMike/GL-BS-WF-dev'
    description = 'Methyl-seq Workflow for Document GL-DPPD-XXXX'
    mainScript = 'main.nf'
    defaultBranch = 'main'
    nextflowVersion = '22.10.0'
    version = '1.0.0'
}

// needed for conda to work when specified: https://github.com/nextflow-io/nextflow/pull/3073
conda.enabled=true

// use mamba in place of conda for any required environment creation
conda.useMamba = true

// // Adapted from : https://github.com/nf-core/rnaseq/blob/master/nextflow.config
// def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
// timeline {
//     enabled = true
//     file    = "${params.gldsAccession}/Resource_Usage/execution_timeline_${trace_timestamp}.html"
// }
// report {
//     enabled = true
//     file    = "${params.gldsAccession}/Resource_Usage/execution_report_${trace_timestamp}.html"
// }
// trace {
//     enabled = true
//     file    = "${params.gldsAccession}/Resource_Usage/execution_trace_${trace_timestamp}.txt"
// }
// dag {
//     enabled = false // TODO: DISCUSS, setting up nextflow env with graphviz to output the svg diagram
//     file    = "${params.gldsAccession}/Resource_Usage/pipeline_dag_${trace_timestamp}.svg"
// }


profiles {

//    slurm {

//        includeConfig 'config/executor/default_slurm.config'

//    }

    singularity {

        singularity.enabled    = true
        singularity.autoMounts = true
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        // Addresses issue: https://github.com/nextflow-io/nextflow/issues/1210
        process {
            errorStrategy = { 
                task.exitStatus == 255 ? 'retry' : 'terminate' 
            }
        }
        includeConfig 'config/software/docker-images.config'

    }

    docker {

        singularity.enabled    = false
        docker.enabled         = true
        docker.runOptions      = '-u $(id -u):$(id -g)'
        docker.userEmulation   = true
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        process {
            errorStrategy = { 
                [125,127].contains(task.exitStatus) ? 'retry' : 'terminate' 
            }
        }
        includeConfig 'config/software/docker-images.config'

    }

    conda {

        useMamba = true
        includeConfig 'config/software/conda-envs.config'

    }

    local {

        executor {
            cpus = 4
        }

        includeConfig 'config/software/local-conda-envs.config'

    }

}
